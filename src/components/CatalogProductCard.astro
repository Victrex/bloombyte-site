---
export interface Props {
  product: {
    id: number;
    name: string;
    description: string;
    price: number;
    category: string;
    image_url?: string;
    is_popular?: boolean;
  };
}

const { product } = Astro.props;
---

<div class="product-catalog-card group relative bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2" data-product-id={product.id}>
  {product.is_popular === true && (
    <div class="absolute top-4 left-4 z-10">
      <span class="bg-gradient-to-r from-pink-500 to-orange-500 text-white text-xs font-bold px-3 py-1 rounded-full shadow-md">
        ‚≠ê Popular
      </span>
    </div>
  )}
  
  <!-- Product Image -->
  <a href={`/producto/${product.id}`} class="block relative h-64 overflow-hidden bg-gradient-to-br from-pink-100 to-orange-100">
    {product.image_url ? (
      <img
      src={product.image_url}
      alt={product.name}
      class="absolute inset-0 w-full h-full object-cover object-center transition-transform duration-500 group-hover:scale-105"
      loading="lazy"
      />
    ) : (
      <>
      <div class="absolute inset-0 bg-gradient-to-br from-amber-300 via-orange-400 to-amber-500 opacity-50"></div>
      <div class="absolute inset-0 flex items-center justify-center">
        <div class="w-48 h-48 bg-gradient-to-br from-amber-400 via-orange-500 to-amber-600 rounded-full shadow-xl transform group-hover:scale-110 transition-transform duration-500">
        <div class="absolute inset-4 bg-gradient-to-br from-amber-300 via-orange-400 to-amber-500 rounded-full"></div>
        <div class="absolute inset-8 bg-gradient-to-br from-amber-200 via-orange-300 to-amber-400 rounded-full"></div>
        <div class="absolute inset-12 bg-gradient-to-br from-white via-orange-100 to-amber-200 rounded-full"></div>
        </div>
      </div>
      </>
    )}
    
    <!-- Category Badge -->
    <div class="absolute bottom-4 left-4">
      <span class="bg-white/90 backdrop-blur-sm px-3 py-1 rounded-full text-xs font-medium text-gray-700">
        {product.category === 'normal' && 'ü•ê Cl√°sico'}
        {product.category === 'fruta' && 'üçì Frutal'}
        {product.category === 'salado' && 'üßÄ Salado'}
        {product.category === 'especial' && '‚ú® Especial'}
      </span>
    </div>
  </a>
  
  <!-- Product Info -->
  <div class="p-6">
    <div class="mb-4">
      <h3 class="text-xl font-bold text-gray-800 mb-2 group-hover:text-pink-500 transition-colors">
        <a href={`/producto/${product.id}`}>
          {product.name}
        </a>
      </h3>
      <p class="text-gray-600 text-sm line-clamp-2">
        {product.description}
      </p>
    </div>
    
    <div class="flex items-center justify-between">
      <span class="text-2xl font-bold text-pink-500">
        L.{product.price}
      </span>
      
      <button 
        class="add-to-cart-btn bg-gradient-to-r from-pink-500 to-orange-500 text-white p-3 rounded-full shadow-lg hover:shadow-xl transform hover:scale-110 transition-all duration-300"
        data-product={JSON.stringify(product)}
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"></path>
        </svg>
      </button>
    </div>
  </div>
</div>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .product-catalog-card {
    view-transition-name: product-card;
  }
</style>

<script>
  import { addToCart } from '../stores/cartStore';
  
  document.addEventListener('astro:page-load', () => {
    const addButtons = document.querySelectorAll('.add-to-cart-btn');
    
    addButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        e.stopPropagation();
        
        const productData = button.getAttribute('data-product');
        if (productData) {
          const product = JSON.parse(productData);
          addToCart(product);
          
          // Animaci√≥n de agregado
          button.innerHTML = '<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path></svg>';
          
          setTimeout(() => {
            button.innerHTML = '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"></path></svg>';
          }, 1000);
        }
      });
    });
  });
</script>
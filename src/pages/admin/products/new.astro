---
import AdminLayout from '../../../layouts/AdminLayout.astro';
import ecommerceConfig from '../../../../public/ecommerce-config.json';

const { categories } = ecommerceConfig;
---

<AdminLayout title="Nuevo Producto">
  <div class="max-w-4xl mx-auto">
    <div class="mb-6">
      <a href="/admin/products" class="text-blue-600 hover:text-blue-800 flex items-center gap-2">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        Volver a productos
      </a>
    </div>
    
    <div class="bg-white rounded-lg shadow-sm p-8">
      <form id="product-form" class="space-y-6">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <!-- Name -->
          <div>
            <label for="name" class="block text-sm font-medium text-gray-700 mb-2">
              Nombre del Producto <span class="text-red-500">*</span>
            </label>
            <input 
              type="text" 
              id="name" 
              name="name" 
              required 
              class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:border-pink-500 focus:ring-2 focus:ring-pink-200 transition-all"
              placeholder="Ej: Rol de Chocolate Deluxe"
            />
          </div>
          
          <!-- Price -->
          <div>
            <label for="price" class="block text-sm font-medium text-gray-700 mb-2">
              Precio (L.) <span class="text-red-500">*</span>
            </label>
            <input 
              type="number" 
              id="price" 
              name="price" 
              required 
              min="0" 
              step="0.01"
              class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:border-pink-500 focus:ring-2 focus:ring-pink-200 transition-all"
              placeholder="85.00"
            />
          </div>
        </div>
        
        <!-- Description -->
        <div>
          <label for="description" class="block text-sm font-medium text-gray-700 mb-2">
            Descripción <span class="text-red-500">*</span>
          </label>
          <textarea 
            id="description" 
            name="description" 
            required 
            rows="4"
            class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:border-pink-500 focus:ring-2 focus:ring-pink-200 transition-all resize-none"
            placeholder="Describe el producto de manera atractiva..."
          ></textarea>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <!-- Category -->
          <div>
            <label for="category" class="block text-sm font-medium text-gray-700 mb-2">
              Categoría <span class="text-red-500">*</span>
            </label>
            <select 
              id="category" 
              name="category" 
              required
              class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:border-pink-500 focus:ring-2 focus:ring-pink-200 transition-all"
            >
              <option value="">Selecciona una categoría</option>
              {categories.map(cat => (
                <option value={cat.id}>{cat.name}</option>
              ))}
            </select>
          </div>
          
          <!-- Popular -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">
              Producto Popular
            </label>
            <div class="flex items-center gap-4 mt-3">
              <label class="flex items-center cursor-pointer">
                <input 
                  type="radio" 
                  name="is_popular" 
                  value="1"
                  class="mr-2 text-pink-500 focus:ring-pink-500"
                />
                <span>Sí</span>
              </label>
              <label class="flex items-center cursor-pointer">
                <input 
                  type="radio" 
                  name="is_popular" 
                  value="0"
                  checked
                  class="mr-2 text-pink-500 focus:ring-pink-500"
                />
                <span>No</span>
              </label>
            </div>
            <p class="text-xs text-gray-500 mt-1">Los productos populares aparecen destacados en la página principal</p>
          </div>
        </div>
        
        <!-- Image Upload -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">
            Imagen del Producto
          </label>
          <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-pink-500 transition-colors">
            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
            </svg>
            <p class="mt-2 text-sm text-gray-600">
              <label for="image" class="cursor-pointer text-blue-600 hover:text-blue-800">
                Sube una imagen
              </label>
              o arrastra y suelta
            </p>
            <input type="file" id="image" name="image" accept="image/*" class="hidden" />
            <div id="image-preview" class="mt-4"></div>
            <p class="text-xs text-gray-500 mt-1">PNG, JPG hasta 5MB</p>
          </div>
        </div>
        
        <!-- Actions -->
        <div class="flex gap-4 pt-6 border-t">
          <a 
            href="/admin/products" 
            class="flex-1 text-center border border-gray-300 text-gray-700 py-3 rounded-lg hover:bg-gray-50 transition-colors"
          >
            Cancelar
          </a>
          <button 
            type="submit" 
            class="flex-1 bg-gradient-to-r from-pink-500 to-orange-500 text-white font-medium py-3 rounded-lg hover:shadow-lg transition-all duration-300"
          >
            Crear Producto
          </button>
        </div>
      </form>
    </div>
  </div>
</AdminLayout>
<script>
  const form = document.getElementById('product-form') as HTMLFormElement | null;
  
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form as HTMLFormElement);
    // No crear productData, enviar formData directamente para soportar archivos
    try {
      const response = await fetch('/api/admin/products', {
        method: 'POST',
        body: formData,
      });
      
      if (response.ok) {
        alert('Producto creado exitosamente');
        window.location.href = '/admin/products';
      } else {
        const error = await response.json();
        alert('Error al crear el producto: ' + (error.message || 'Error desconocido'));
      }
    } catch (error) {
      console.error('Error:', error);
      alert('Error al crear el producto');
    }
  });
  
  // Image preview
  const imageInput = document.getElementById('image');
  const imagePreview = document.getElementById('image-preview');
  imageInput?.addEventListener('change', (e) => {
    const target = e.target as HTMLInputElement;
    if (target && target.files && target.files[0]) {
      const file = target.files[0];
      const reader = new FileReader();
      reader.onload = function(ev) {
        if (ev.target && ev.target.result) {
          if (imagePreview) {
            imagePreview.innerHTML = `<img src="${ev.target.result}" alt="Vista previa" class="mx-auto rounded-lg max-h-40" />`;
          }
        } else {
          if (imagePreview) {
            imagePreview.innerHTML = '';
          }
        }
      };
      reader.readAsDataURL(file);
    } else {
      if (imagePreview) {
        imagePreview.innerHTML = '';
      }
    }
  });
</script>
</script>